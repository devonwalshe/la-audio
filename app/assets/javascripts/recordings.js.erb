// Recordings JS
$( window ).load(function() {
  
  // Initialize audio player
  audiojs.events.ready(function() {
    var as = audiojs.createAll();
  });
  
  // Set up the global variables
  var segments = JSON.parse(gon.interview_segments);
  var interviewLength = gon.interview_length;
  var interview = document.getElementById("audioPlayer");
  
  // On time update, check which segment we're in and light up the bubble
  interview.ontimeupdate = function() {
    updateSegmentBubble();
    drawTimelinePointer();
  };

  window.onresize = function(){
    drawSegmentLines();
  };

  // If window size changes get timeline middle window size
  function getTimelineSize(){
    
    return $(".middle-bar").width()
  };

  // Get timecode from interview audio object
  function getTimeCode() {
  // Display the current position of the video in a <p> element with id="timecode"
    return interview.currentTime;
  }
  
  // Gets the current time, iterates through all the segments, and finds the relevant bubble, then lights it up
  function updateSegmentBubble() {
    currentTime = parseFloat(getTimeCode());
    // console.log(current_time.toFixed(1))
    
    // Iterate through segments to check if we are in a certain one
    for(i = 0; i < segments.length; i++){
      startTime = parseFloat(segments[i]["start_time"]);
      endTime = parseFloat(segments[i]["end_time"]);
      // console.log(startTime)
      // console.log(endTime)
      // console.log(currentTime)
      
      // Change segment bubbles colour if its in there
      if (currentTime >= startTime && currentTime <= endTime) {
        $("div#"+segments[i]["name"].toLowerCase().replace(/\s/g, "_")).addClass("bgorange").removeClass("bgblue");
      };
      
      if (currentTime <= startTime || currentTime >= endTime) {
        // console.log(segments[i])
        $("div#"+segments[i]["name"].toLowerCase().replace(/\s/g, "_")).addClass("bgblue").removeClass("bgorange");
      };
      
    }
  }
  
  // Draws lines where the segments are in the timeline below the audio player
  function drawSegmentLines(){
    // Clear all divs
    $(".timeline-background").empty()
    
    // Then to get the size of the div we are in
    var timelineSize = getTimelineSize();
    
    // Get scale attr for timeline size
    var scaleAttr = parseFloat(interviewLength)/parseFloat(timelineSize);
    
    // For each segment
    for(i = 0; i < segments.length; i++){
      // convert its start time to the scale of the div we are in as pixel width
      var pixelLocation = Math.round(parseFloat(segments[i]["start_time"]) / scaleAttr)
      
      // Create the div with the class and location we want
      var segmentTick = document.createElement('div');
      var segmentTick = $(segmentTick).attr({
        "class": "bgorange segment-tick",
        "style": "left:" + pixelLocation + "px;"
      });
      
      // Then draw it
      $(".timeline-background").append(segmentTick);
    } 
    
  }
  
  // Initial draw of segment lines
  drawSegmentLines();
  
  
  // Set up timeline pointer
  function drawTimelinePointer(){
    
    // get the time
    var currentTime = parseFloat(getTimeCode());
    
    // Get the middle bar size
    var pointerBarWidth = $(".pointer-mid").width();
    
    // Get the scale attr
    var scaleAttr = parseFloat(interview.duration)/parseFloat(pointerBarWidth);
    
    // move it to the appropriate pixel location
    $(".timeline-pointer").css("left",Math.round(currentTime/scaleAttr)-10)
    
  }
  
})


  
